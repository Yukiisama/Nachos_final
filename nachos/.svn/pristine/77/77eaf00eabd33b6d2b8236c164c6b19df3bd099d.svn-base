#include "syscall.h"

void f(void * c){
  PutChar((char)c);
  PutChar('\n');
  //ThreadExit();
}

void g(void * c){
  PutString((char *)c,50);
  //ThreadExit();
}

int main(){
  volatile int i = 0;
  PutString("Lancement des tests\n",50);
  
  ThreadCreate(f,'A');
  ThreadCreate(f,'B');
  ThreadCreate(f,'C');
  for (i = 0;i<40;i++){
    while(ThreadCreate(f,'A')==-1); // Sera exécuté même pour les cas !=1 mais continue à essayer de créer le thread 
    //tant que ce n'est pas possible , entre autre , quand l'espace devient disponible, cela crée le thread ( !=-1) et arrête la boucle while  
  }
  
  
  //ThreadCreate(g,"Coucou c'est moi \n");
  //ThreadCreate(g,"Coucou moi c'est pas moi \n");
  
  //ThreadExit();
  }
 

 
